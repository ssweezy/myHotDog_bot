from time import sleep
from datetime import datetime
from aiogram import Router, F, Bot
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from utils.database.requests import set_user, user_exists, get_user_info
from utils.FSM import Reg
from utils.config import PASSWORD, PASSWORD_ADMIN
from utils.kb.inline_kb import acceptation, emp_menu_kb, adm_menu_kb

router = Router()


# –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∑–∞–ø—Ä–æ—Å –ø–∞—Ä–æ–ª—è
@router.message(Command('start'))
async def hello(message: Message, bot: Bot, state: FSMContext):
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å–ª–∏ –µ—Å—Ç—å —é–∑–µ—Ä —Ç–æ –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å
    if not (await user_exists(message.from_user.id)):
        await message.answer(f"üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º {message.from_user.username}!")
        msg = await message.answer("üîê –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥-–ø–∞—Ä–æ–ª—å.\n–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
        await state.update_data(msg_id=msg.message_id)
        await bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id - 2)
        await state.set_state(Reg.password)
    else:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å–ª–∏ –µ—Å—Ç—å —é–∑–µ—Ä —Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–µ–µ –º–µ–Ω—é
        user_data = await get_user_info(message.from_user.id)
        if(user_data.category=='adm'):
            msg = await message.answer(f"<b>–í –≤–∞—à–µ–º —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏</b>", reply_markup=adm_menu_kb)
            await bot.delete_message(chat_id=msg.chat.id, message_id=msg.message_id - 2)
        elif(user_data.category=='emp'): 
            msg = await message.answer(f"<b>–ú–ï–ù–Æ</b>", reply_markup=emp_menu_kb)
            await bot.delete_message(chat_id=msg.chat.id, message_id=msg.message_id - 2)
        else:
            await message.answer('–£ –≤–∞—Å –Ω–µ—Ç —Ä–æ–ª–∏')
        await message.delete()


# –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –∏–ª–∏ —Å—Ç–∞—Ä—Ç –µ—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –∑–∞—Ä–µ–≥–∞–Ω
@router.message(Reg.password)
async def pass_check(message: Message, bot: Bot, state: FSMContext):

    # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    if message.text == PASSWORD:
        data = await state.get_data()
        await message.delete()
        await bot.edit_message_text(text="üîì –í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É!\n–í–≤–µ–¥–∏—Ç–µ <b>–∏–º—è:</b>",
                                    chat_id=message.chat.id,
                                    message_id=data["msg_id"])
        await state.update_data(tg_id=message.from_user.id)
        await state.update_data(tg_username=message.from_user.username)
        await state.update_data(role="")
        await state.update_data(category="emp")
        await state.set_state(Reg.name)

    # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    elif message.text == PASSWORD_ADMIN:
        data = await state.get_data()
        await message.delete()
        await bot.edit_message_text(text="üîì –í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ <b>—É–ø—Ä–∞–≤–ª—è—é—â–∏–π</b>!\n–í–≤–µ–¥–∏—Ç–µ <b>–∏–º—è:</b>",
                                    chat_id=message.chat.id,
                                    message_id=data["msg_id"])
        await state.update_data(tg_id=message.from_user.id)
        await state.update_data(tg_username=message.from_user.username)
        await state.update_data(role="adm")
        await state.update_data(category="adm")
        await state.set_state(Reg.name)

    # –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    else:
        await message.delete()
        data = await state.get_data()
        try:
            await bot.edit_message_text(text="üîí <b>–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å</b>\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:", chat_id=message.chat.id,
                                    message_id=data["msg_id"])
        except:
            pass


# –∏–º—è
@router.message(Reg.name)
async def get_name(message: Message, bot: Bot ,state: FSMContext):
    await state.update_data(name=message.text)
    data = await state.get_data()
    await message.delete()
    await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                     f"\n–ò–º—è - {data["name"]}"
                                     f"\n–í–≤–µ–¥–∏—Ç–µ <b>—Ñ–∞–º–∏–ª–∏—é:</b>", chat_id=message.chat.id,
                                message_id=data["msg_id"])
    await state.set_state(Reg.surname)


# —Ñ–∞–º–∏–ª–∏—è
@router.message(Reg.surname)
async def get_surname(message: Message, bot: Bot ,state: FSMContext):
    await state.update_data(surname=message.text)
    data = await state.get_data()
    await message.delete()
    await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                     f"\n–ò–º—è - {data["name"]}"
                                     f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                     f"\n–í–≤–µ–¥–∏—Ç–µ <b>–¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è:</b>", chat_id=message.chat.id,
                                message_id=data["msg_id"])
    await state.set_state(Reg.birthday)


# –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
@router.message(Reg.birthday)
async def get_birthday(message: Message, bot: Bot ,state: FSMContext):
    await state.update_data(birthday=message.text)
    data = await state.get_data()
    await message.delete()
    await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                     f"\n–ò–º—è - {data["name"]}"
                                     f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                     f"\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {data["birthday"]}"
                                     f"\n–í–≤–µ–¥–∏—Ç–µ <b>–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b>", chat_id=message.chat.id,
                                message_id=data["msg_id"])
    await state.set_state(Reg.phoneNum)


# –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@router.message(Reg.phoneNum)
async def get_phone(message: Message, bot: Bot, state: FSMContext):
    await state.update_data(phone=message.text)
    data = await state.get_data()
    await message.delete()

    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ç–æ –µ–º—É –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Å–≤–æ—é —Ä–æ–ª—å
    if data["category"] == 'emp':
        await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                         f"\n–ò–º—è - {data["name"]}"
                                         f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                         f"\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {data["birthday"]}"
                                         f"\n–¢–µ–ª–µ—Ñ–æ–Ω - {data["phone"]}"
                                         f"\n–í–≤–µ–¥–∏—Ç–µ <b>—Å–≤–æ—é —Ä–æ–ª—å</b>", chat_id=message.chat.id,
                                    message_id=data["msg_id"])
        await state.set_state(Reg.role)

    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω, —Ç–æ –µ–º—É –Ω–µ –Ω—É–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Å–≤–æ—é —Ä–æ–ª—å, —Å–º–æ—Ç—Ä–∏—Ç–µ line 52
    else:
        await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                         f"\n–ò–º—è - {data["name"]}"
                                         f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                         f"\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {data["birthday"]}"
                                         f"\n–¢–µ–ª–µ—Ñ–æ–Ω - {data["phone"]}"
                                         f"\n\n<b>–í—Å–µ –≤–µ—Ä–Ω–æ?</b>", chat_id=message.chat.id,
                                    message_id=data["msg_id"], reply_markup=acceptation)


# —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(Reg.role)
async def get_role(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()
    if data["role"] != "":
        await message.delete()
    else:
        await state.update_data(role=message.text)
        data = await state.get_data()
        await message.delete()
        await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                     f"\n–ò–º—è - {data["name"]}"
                                     f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                     f"\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {data["birthday"]}"
                                     f"\n–¢–µ–ª–µ—Ñ–æ–Ω - {data["phone"]}"
                                     f"\n–†–æ–ª—å - {data["role"]}"
                                     f"\n\n<b>–í—Å–µ –≤–µ—Ä–Ω–æ?</b>", chat_id=message.chat.id,
                                message_id=data["msg_id"], reply_markup=acceptation)


# –∫–Ω–æ–ø–∫–∞ "–î–∞"
@router.callback_query(F.data == 'yes')
async def reg_db(call: CallbackQuery, bot: Bot, state: FSMContext):
    data = await state.get_data()
    print(call.from_user)
    info = [call.from_user.id,
            call.from_user.username,
            data["role"],
            data["category"],
            data["name"],
            data["surname"],
            data["birthday"],
            data["phone"],
            str(datetime.now())[:19]
            ]
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, —Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ
    try:
        await set_user(info)
    except:
        category = (await state.get_data())["category"]
        await state.clear()
        if category == 'admin':
            await state.update_data(category=category)
            await state.update_data(role=category)
        else:
            await state.update_data(category=category)
        await call.message.edit_text(text="–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞...–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ\n<b>–í–≤–µ–¥–∏—Ç–µ –∏–º—è</b>")
        await state.set_state(Reg.name)
        return

    await call.message.delete()
    await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id-1)
    msg = await bot.send_message(text="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —Ç–µ–ø–µ—Ä—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", chat_id=call.message.chat.id,
                           message_effect_id="5046509860389126442")
    await state.update_data(msg_id=msg.message_id) # –ø–µ—Ä–µ–ø—Ä–∏–≤—è–∑–∫–∞ –∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á—Ç–æ–±—ã –∏–º –±—ã–ª–æ —É–¥–æ–±–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å

    # —Ñ—Ä–∏–∑ –Ω–∞ 3 —Å–µ–∫—É–Ω–¥—ã, –∑–∞—Ç–µ–º –ø–æ—è–≤–ª—è–µ—Ç—Å—è –º–µ–Ω—é, –≤–∏–¥ –º–µ–Ω—é –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    sleep(3)
    if data["category"] == "emp":
        await bot.edit_message_text(text=f"<b>–ú–ï–ù–Æ</b>",
                                    chat_id=call.message.chat.id,
                                    message_id=msg.message_id,
                                    reply_markup=emp_menu_kb)
    else:
        await bot.edit_message_text(text=f"<b>–í –≤–∞—à–µ–º —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏</b>",
                                    chat_id=call.message.chat.id,
                                    message_id=msg.message_id,
                                    reply_markup=adm_menu_kb)
    await state.set_state(None)


# –∫–Ω–æ–ø–∫–∞ "–ù–µ—Ç"
@router.callback_query(F.data == 'no')
async def reg_repeat(call: CallbackQuery, bot: Bot, state: FSMContext):
    category = (await state.get_data())["category"]
    await state.clear()
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω –∏–ª–∏ –Ω–µ—Ç –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–æ–ª–∏, –∏–Ω–∞—á–µ –±–µ–∑ —ç—Ç–æ–≥–æ –≤—ã–¥–∞–µ—Ç –æ—à–∏–±–∫—É
    if category == 'admin':
        await state.update_data(category=category)
        await state.update_data(role=category)
    else:
        await state.update_data(category=category)
    await state.update_data(msg_id=call.message.message_id)
    await call.message.edit_text(text="–ó–∞–ø–æ–ª–Ω—è–µ–º –∑–∞–Ω–æ–≤–æ...\n<b>–í–≤–µ–¥–∏—Ç–µ –∏–º—è</b>")
    await state.set_state(Reg.name)



